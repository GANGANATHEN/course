^^^^^^^^^ F:\project files\course\course\sql\oracle sql\practice ^^^^^

**********DAY 1*************

soon(feature) => date data type - dd-mon-yy --> yy-dd-mon ===$$$$===

start -> connect system/g

cmd  =>spool D:\oracletest(foldername)\filename --> record the sql data
end =>spool off(save the record file)

create table =>	create table tablename(items);
alter table => ALTER TABLE (tablename) add (name or something);

view table =>desc (table name);
-----------------------------------------------------------------------------------------------------------------------------------------------------------

**********DAY 2*************

=>select *from tab; -> its show all tables in database

========day 2 -=- tasks=========

DDL commands:->

@@create
@@alter
@@truncate
@@drop

create table employee(empno number(5),ename varchar2(20),dob date,doj date,basic_pay number(10,2),da number,hra number,pf number,netpay number(10,2)); ->create table
alter table employee modify ename varchar2(25); --> modify table
alter table employee add mno number(10); --> add table
alter table employee rename column empno to emo;
truncate table employee;

------------------------------------------------------------------------------------------------------------------------------------------------------------

**********DAY 3*************
Data Manipulation Language(DML)

@@insert : insert into (tablename) values (list of value);
==>& -->you out this sympole -> enter the value:
==>insert into (tablename) into(&empno,'&ename','&dob','&doj',&basic_bay);
insert into (tablename) (eno,rno) values (list of value);

@@select : where,like,distinct,between,..
=>select *from (tablename);
=>select ename,eno from (tablename); ==> view only selected data
==> view only selected data --> select (tablehead) from (tablename);
=>select *from tab; -> its show all tables in database
==>select *from (tablename) where age>34;
==>select *from (tablename) where name like '__na%'; --> show 'na' assign names output->"jana","mana"
==>select *from (tablename) where name like '%j%' or ('j%'); -> show 'j' assign names output->"jana"
==>select *from (tablename) where name between '%D%' and 'K%';
==>select *from (tablename) where name in ('Raman','jana') --> show this two name
==>select *from (tablename) where name not in ('Raman','jana')--> skip this two name
==>select *from (tablename) order by name;
==>select *from (tablename) order by asc;
==>select *from (tablename) order by desc;
==>select *from (tablename) order by rno desc;

@@update:
==>update (tablename) set da=basic*20/100,pf=basic_pay*12/100;
==>update (tablename) set total=basic+basic_pay;
==>update (tablename) set age=21 where name='mena';

------------------------------------------------------------------------------------------------------------------------------------------------------------

**********DAY 4*************

@@delete:
==>delete from (tablename) where rno=104;

Trasaction Cntrol Laguage(TCL): ######## important #######

---> commit: is save ll data to the database
---> rollback :
--->savepoint:its not a cmnd, its a marker;
==>savepoint s1(s1 is user defined name);
==>rollback to savepoint s1; usage of this cmnd -> its only save the brevious record

========day 4 -=- tasks=========

>create table student(rno number,name varchar(20),m1 number,m2 number,m3 number,m4 number,m5 number,total number,avg number, result varchar(20));
>insert into student (rno,name,m1,m2,m3,m4,m5) values (1,'a',98,97,87,85,90);
>insert into student (rno,name,m1,m2,m3,m4,m5) values (2,'b',97,67,57,85,60);
>insert into student (rno,name,m1,m2,m3,m4,m5) values (3,'c',96,99,87,85,90);

>update student set total=m1+m2+m3+m4+m5;
>update student set avg=total/5;
>UPDATE student SET result = CASE WHEN avg >= 50 THEN 'pass' ELSE 'fail' END;

------------------------------------------------------------------------------------------------------------------------------------------------------------

**********DAY 5*************

INTEGRITYCONSTRAINTS

@--->DOMAIN INTEGRITYCONSTRAINTS{

-->not null constraints:
>create table (tablename) (empno number(10) constraint cust not null,name varchar(20));==>cust - constraints name,not null - constraints type;

-->check constraints:
> CREATE TABLE Employees( EmployeeID INT CHECK(EmployeeID BETWEEN 100 AND 1000), NAME VARCHAR(20), DeptID INT CHECK(DeptID > 0 AND DeptID < 100), SALARY 
NUMBER(10));
}

@--->Entity Intigrity Constraints{

-->unique constraints:
>create table (tablename) (empno number(10) not null,name varchar(20),constraint empno_unique unique (empno));

-->Primary Key constraints:
>create table (tablename) (empno number(10) not null,name varchar(20),constraint empno_primry primary Key (empno)); ==>(empno_primry) name os user defined in constraints
>>create table (tablename) (empno number(10) primary Key,name varchar(20) not null);

-->Default constraints:
>create table (tablename) (empno number(10) not null,name varchar(20) default 'g');
}

------------------------------------------------------------------------------------------------------------------------------------------------------------

**********DAY 6*************

@--->Referential Intigrity Constraints{
===>parent is primary key and child key is foreign key.

-->Foreign Key:
>create table (tablename) (empno number(10),name varchar(20),constraint empno_pk1 primary Key (empno));

-->Reference Key:
>create table (tablename) (empno number(10),name varchar(20),constraint empno_pk1 foreign Key (empno) reference (tablename)(empno) on delete cascade);
}

@--->dual:
-->dual is the predefined table in oracle.

>desc dual;

@--->single row functions:(date,numeric,charecter,convertion,miscellaneous)

@--date-:
->add_month(d,n); =>d-date, n-no.of months
>select add_month(sysdate,10) from dual;

->last_day(d);
>select last_day(sysdate) from dual;

->months_between(d1,d2);
>select months_between('dd-mon-yy','dd-mon-yy') from dual;

->next_day();
>select next_day(sysdate,'friday') from dual;

->round:
>select round(to_date('11-sep-2024,'dd-mon-yy'),'month'); ==> 15 days after - before
>select round(to_date('11-sep-2024,'dd-mon-yy'),'year'); ==> 6 months after - before
>select round(to_date('11-sep-2024,'dd-mon-yy'),'day'); ==> first half

->Truncate:
>select trunc(to_date('11-sep-2024,'dd-mon-yy'),'month');


------------------------------------------------------------------------------------------------------------------------------------------------------------

**********DAY 7*************

->Greatst:
>select greatest(to_date(sysdate),to_date('11-sep-2024,'dd-mon-yy'),from dual); it's show which one is greatest.

@--charecter-:
->concatenation(||):
>select table (tname) (column1)||(column2) from (tname);

->ascii:
>select ascii('a') from dual; //print ascii value

->chr:
>select chr('010') from dual; //print ascii charecter

->concat:
>select concat(fname,lname) fnamelname from (tname);

->initcap:
>select initcap(fname) from (tname); //first letter only capital

->length:
>select length(fname) from (tname);
>select length('hi dude') from dual;

->lower:
>select length('hi dude') from dual;

->lpad:
>select lpad(fname,5),lname from (tablename); -->it's allocate left side 5-padding(space)
>select lpad(fname,5,"@"),lname from (tablename); -->it's allocate right side @@@ sympole

->ltrim:
>select ltrim('fname','ame'),lname from (tablename);

->rpad:
>select rpad(fname,5),lname from (tablename);
>select rpad(fname,5,"@"),lname from (tablename); -->it's allocate right side @@@ sympole

->rtrim:
>select rtrim('fname','ame'),lname from (tablename);

->translate:
>select translate('hidude','h','o') from dual;\\output -oidude

->replace:
>select replace('jack and jue','j','bl') from dual;\\output - black and blue

->substr:
>select substr('jackandjue',3,3) from dual;\\output - cka

------------------------------------------------------------------------------------------------------------------------------------------------------------
**********DAY 8*************


------------------------------------------------------------------------------------------------------------------------------------------------------------

**********DAY 9*************

-->Group function:{}
-->set operation:{}

------------------------------------------------------------------------------------------------------------------------------------------------------------

**********DAY 10*************


------------------------------------------------------------------------------------------------------------------------------------------------------------
**********DAY 11*************

-->create view:
>create view (newtablename) as select (oldtablevalues) from (oldtablename);

-->Grouping a data:

------------------------------------------------------------------------------------------------------------------------------------------------------------
**********DAY 12*************






------------------------------------------------------------------------------------------------------------------------------------------------------------